name: Upload release objects
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_artifacts:
    name: Build package and release notes 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --prune --tags
      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip setuptools wheel reno tox
      - name: Run tests
        run: tox -e py39
      - name: Build sdist
        run: python setup.py sdist
      - name: Build wheel
        run: python setup.py bdist_wheel
      - name: Generate Release Notes
        run: reno report --version ${{ env.RELEASE_VERSION }} > notes.rst
      - name: Convert Notes to Markdown
        uses: docker://pandoc/core:2.13
        with:
          args: "/github/workspace/notes.rst -f rst -t markdown -o /github/workspace/notes.md"
      - name: Upload distributions
        uses: actions/upload-artifact@v2
        with:
          path: dist/*
          name: dist_files
      - name: Upload release notes
        uses: actions/upload-artifact@v2
        with:
          path: notes.md
          name: release_notes
  twine_upload:
    name: Upload to Twine
    runs-on: ubuntu-latest
    needs: build_artifacts
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Twine
        run: python -m pip install twine wheel
      - name: Download dist files
        uses: actions/download-artifact@v2
        with:
          name: dist_files
          path: dist
      - name: Upload to pypi
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_USERNAME: __token__
        run: twine upload dist/*
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build_artifacts
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist_files
          path: dist
      - uses: actions/download-artifact@v2
        with:
          name: release_notes
          path: notes
      - name: Create Releae
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: notes/notes.md
      - name: Upload assets to release
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: dist/*
          overwrite: true
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}


